syntax = "proto3";
package pingerus.v1;
option go_package = "github.com/NordCoder/Pingerus/generated;generated";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

message User {
  int64                     id          = 1  [(validate.rules).int64.gte = 0];
  string                    email       = 2  [(validate.rules).string.email = true];
  google.protobuf.Timestamp created_at  = 3;
  google.protobuf.Timestamp updated_at  = 4;
}

message SignUpRequest {
  string email    = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {min_len: 8, max_len: 128}];
}

message SignInRequest {
  string email    = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {min_len: 1, max_len: 128}];
}

message AuthResponse {
  string access_token = 1;
  User   user         = 2;
}

message AccessTokenResponse {
  string access_token = 1;
}

service AuthService {
  rpc SignUp(SignUpRequest) returns (AuthResponse) {
    option (google.api.http) = { post: "/v1/auth/sign-up" body: "*" };
  }
  rpc SignIn(SignInRequest) returns (AuthResponse) {
    option (google.api.http) = { post: "/v1/auth/sign-in" body: "*" };
  }
  rpc Refresh(google.protobuf.Empty) returns (AccessTokenResponse) {
    option (google.api.http) = { post: "/v1/auth/refresh" };
  }
  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = { post: "/v1/auth/logout" };
  }
  rpc Me(google.protobuf.Empty) returns (User) {
    option (google.api.http) = { get: "/v1/auth/me" };
  }
}
