version: "3.9"

networks:
  pingerus-it:

services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.17
    command:
      - redpanda
      - start
      - --mode=dev-container
      - --smp=1
      - --memory=512M
      - --overprovisioned
      - --check=false
      - --kafka-addr=internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr=internal://redpanda:9092,external://127.0.0.1:19092
    ports:
      - "19092:19092"
    networks: [pingerus-it]

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: pingerus
    ports:
      - "55432:5432"
    networks: [pingerus-it]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pingerus"]
      interval: 5s
      timeout: 3s
      retries: 40

  migrator:
    build:
      context: .
      dockerfile: cmd/migrator/Dockerfile
    environment:
      DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
    networks: [pingerus-it]
    restart: "no"

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "18025:8025"
      - "1025:1025"
    networks: [pingerus-it]

  http-echo:
    image: mendhak/http-https-echo:32
    environment:
      - HTTP_PORT=80
    networks: [pingerus-it]
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:80/" ]
      interval: 5s
      timeout: 3s
      retries: 40

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.109.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./deploy/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports: ["4317:4317","4318:4318"]
    networks: [pingerus-it]

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./deploy/tempo.yaml:/etc/tempo.yaml:ro
      - tempo-data:/var/tempo
    ports: ["3200:3200"]
    networks: [pingerus-it]

  loki:
    image: grafana/loki:2.9.3
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./deploy/loki-config.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    ports: ["3100:3100"]
    networks: [pingerus-it]

  promtail:
    image: grafana/promtail:2.9.3
    command: ["-config.file=/etc/promtail/config.yaml"]
    volumes:
      - ./deploy/promtail.yaml:/etc/promtail/config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [pingerus-it]
    depends_on: { loki: { condition: service_started } }

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    volumes:
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom-data:/prometheus
    ports: ["9090:9090"]
    networks: [pingerus-it]

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./deploy/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
    ports: ["3000:3000"]
    networks: [pingerus-it]
    depends_on:
      - prometheus
      - loki
      - tempo

  email-notifier:
    build:
      context: .
      dockerfile: cmd/email-notifier/Dockerfile
    environment:
      DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"
      KAFKA_IN_BROKERS: "redpanda:9092"
      KAFKA_IN_TOPIC: "status-change"
      KAFKA_IN_GROUP_ID: "email-notifier-it"
      SMTP_ADDR: "mailhog:1025"
      SMTP_FROM: "noreply@pingerus.com"
      SMTP_USER: ""
      SMTP_PASSWORD: ""
      SMTP_USE_TLS: "false"
      SMTP_TIMEOUT: "10s"
      SMTP_SUBJ_PREFIX: "[Pingerus]"
      METRICS_ADDR: ":8084"
      LOG_LEVEL: "debug"
    depends_on:
      redpanda:
        condition: service_started
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      mailhog:
        condition: service_started

    ports:
      - "8084:8084"
    networks: [pingerus-it]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8084/healthz"]
      interval: 5s
      timeout: 3s
      retries: 60

  ping-worker:
    build:
      context: .
      dockerfile: cmd/ping-worker/Dockerfile
    environment:
      DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"
      KAFKA_IN_BROKERS: "redpanda:9092"
      KAFKA_IN_TOPIC: "check-request"
      KAFKA_IN_GROUP_ID: "ping-worker-it"
      KAFKA_OUT_BROKERS: "redpanda:9092"
      KAFKA_OUT_TOPIC: "status-change"
      LOG_LEVEL: "debug"
    depends_on:
      redpanda:
        condition: service_started
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      http-echo:
        condition: service_healthy
    networks: [pingerus-it]
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8083/healthz"]
      interval: 5s
      timeout: 3s
      retries: 40

  api-gateway:
    build:
      context: .
      dockerfile: cmd/api-gateway/Dockerfile
    environment:
      DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"
      KAFKA_IN_BROKERS: "redpanda:9092"
      KAFKA_OUT_BROKERS: "redpanda:9092"
      KAFKA_IN_TOPIC: "check-request"
      KAFKA_OUT_TOPIC: "status-change"
      LOG_LEVEL: "debug"
    depends_on:
      redpanda:
        condition: service_started
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    networks: [pingerus-it]
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 3s
      retries: 60

