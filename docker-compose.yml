version: "3.9"

networks:
  pingerus-net:

volumes:
  pgdata:

x-env-db: &env_db
  DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: pingerus
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [pingerus-net]
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pingerus"]
      interval: 5s
      timeout: 3s
      retries: 20

  kafka:
    image: bitnami/kafka:3.8
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_KRAFT_CLUSTER_ID: "abcdefghijklmnopqrstuvwx"
    networks: [pingerus-net]
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "unset KAFKA_OPTS; /opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 20

  mailhog:
    image: mailhog/mailhog:latest
    networks: [pingerus-net]
    ports:
      - "1025:1025"
      - "8025:8025"

  migrator:
    build:
      context: .
      dockerfile: cmd/migrator/Dockerfile
    environment:
      <<: *env_db
    networks: [pingerus-net]
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  api-gateway:
    build:
      context: .
      dockerfile: cmd/api-gateway/Dockerfile
    environment:
      DB_DSN: "postgres://postgres:secret@db:5432/pingerus?sslmode=disable"
      SERVER_HTTP_ADDR: ":8080"
      SERVER_GRPC_ADDR: ":8081"
      LOG_LEVEL: "info"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    networks: [pingerus-net]
    ports:
      - "8080:8080"
      - "8081:8081"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  scheduler:
    build:
      context: .
      dockerfile: cmd/scheduler/Dockerfile
    environment:
      <<: *env_db
      KAFKA_BROKERS: "kafka:9092"
      KAFKA_TOPIC: "pingerus.checks.request"
      SCHED_TICK: "1s"
      SCHED_BATCH_LIMIT: "100"
      SCHED_METRICS_ADDR: ":8082"
      LOG_LEVEL: "info"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    networks: [pingerus-net]
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8082/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  ping-worker:
    build:
      context: .
      dockerfile: cmd/ping-worker/Dockerfile
    environment:
      <<: *env_db
      KAFKA_IN_BROKERS: "kafka:9092"
      KAFKA_IN_TOPIC: "pingerus.checks.request"
      KAFKA_IN_GROUP_ID: "ping-worker"
      KAFKA_OUT_BROKERS: "kafka:9092"
      KAFKA_OUT_TOPIC: "pingerus.status.changed"
      HTTP_TIMEOUT: "5s"
      HTTP_FOLLOW_REDIRECTS: "true"
      HTTP_VERIFY_TLS: "true"
      HTTP_USER_AGENT: "Pingerus/1.0"
      SERVER_METRICS_ADDR: ":8083"
      LOG_LEVEL: "info"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    networks: [pingerus-net]
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8083/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  email-notifier:
    build:
      context: .
      dockerfile: cmd/email-notifier/Dockerfile
    environment:
      <<: *env_db
      KAFKA_IN_BROKERS: "kafka:9092"
      KAFKA_IN_TOPIC: "pingerus.status.changed"
      KAFKA_IN_GROUP_ID: "email-notifier"
      SMTP_ADDR: "mailhog:1025"
      SMTP_FROM: "noreply@pingerus.dev"
      SMTP_USE_TLS: "false"
      SMTP_TIMEOUT: "5s"
      SMTP_SUBJ_PREFIX: "[Pingerus]"
      SERVER_METRICS_ADDR: ":8084"
      LOG_LEVEL: "info"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      mailhog:
        condition: service_started
      migrator:
        condition: service_completed_successfully
    networks: [pingerus-net]
    ports:
      - "8084:8084"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8084/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
